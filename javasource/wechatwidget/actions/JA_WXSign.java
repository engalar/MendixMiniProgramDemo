// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package wechatwidget.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import java.util.UUID;
import java.util.Map;
import java.util.HashMap;
import java.util.Formatter;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.io.UnsupportedEncodingException;
import wechatwidget.proxies.WxSign;

public class JA_WXSign extends CustomJavaAction<IMendixObject>
{
	private java.lang.String url;
	private java.lang.String nonce;
	private java.lang.String timestamp;
	private java.lang.String ticket;

	public JA_WXSign(IContext context, java.lang.String url, java.lang.String nonce, java.lang.String timestamp, java.lang.String ticket)
	{
		super(context);
		this.url = url;
		this.nonce = nonce;
		this.timestamp = timestamp;
		this.ticket = ticket;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
        IContext context = getContext();
        Map<String, String> ret = new HashMap<String, String>();
        String string1;
        String signature = "";

        // 注意这里参数名必须全部小写，且必须有序
        string1 = "jsapi_ticket=" + ticket + "&noncestr=" + nonce + "&timestamp=" + timestamp + "&url=" + url;
        System.out.println(string1);
        WxSign wxSign = new WxSign(context);
        try {
            MessageDigest crypt = MessageDigest.getInstance("SHA-1");
            crypt.reset();
            crypt.update(string1.getBytes("UTF-8"));
            signature = byteToHex(crypt.digest());
            wxSign.setnonce(nonce);
            wxSign.setsignature(signature);
            wxSign.settimstamp(timestamp);
            wxSign.seturl(url);
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
        return wxSign.getMendixObject();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "JA_WXSign";
	}

	// BEGIN EXTRA CODE

    private static String byteToHex(final byte[] hash) {
        Formatter formatter = new Formatter();
        for (byte b : hash) {
            formatter.format("%02x", b);
        }
        String result = formatter.toString();
        formatter.close();
        return result;
    }

	// END EXTRA CODE
}
